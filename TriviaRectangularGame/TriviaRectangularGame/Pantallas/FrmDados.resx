<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>